@model MyCRM.ViewModels.ProductCreateViewModel

@{
    ViewData["Title"] = "Product Creation Diagnostic";
}

<h1>Product Creation Diagnostic</h1>

<div class="card mb-4">
    <div class="card-header">
        <h5>Database Connection</h5>
    </div>
    <div class="card-body">
        <div id="dbStatus" class="alert alert-info">
            Checking database connection...
        </div>
    </div>
</div>

<div class="card mb-4">
    <div class="card-header">
        <h5>Available Materials</h5>
    </div>
    <div class="card-body">
        @if (Model.AvailableMaterials != null && Model.AvailableMaterials.Any())
        {
            <table class="table">
                <thead>
                    <tr>
                        <th>ID</th>
                        <th>Name</th>
                        <th>Quantity</th>
                        <th>Unit</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var material in Model.AvailableMaterials)
                    {
                        <tr>
                            <td>@material.Id</td>
                            <td>@material.Name</td>
                            <td>@material.Quantity</td>
                            <td>@material.UnitOfMeasure</td>
                        </tr>
                    }
                </tbody>
            </table>
        }
        else
        {
            <div class="alert alert-warning">
                No materials found in the database. You need to create materials before creating products.
            </div>
        }
    </div>
</div>

<div class="card mb-4">
    <div class="card-header">
        <h5>Form Test</h5>
    </div>
    <div class="card-body">
        <form id="testForm" action="javascript:void(0);">
            <div class="mb-3">
                <label class="form-label">Product Name</label>
                <input type="text" class="form-control" id="testName" />
            </div>
            
            <div class="mb-3">
                <label class="form-label">Production Time (min/unit)</label>
                <input type="number" class="form-control" id="testTime" min="1" />
            </div>
            
            <div class="mb-3">
                <label class="form-label">Material</label>
                <select class="form-select" id="testMaterial">
                    <option value="">Select Material</option>
                    @foreach (var material in Model.AvailableMaterials)
                    {
                        <option value="@material.Id">@material.Name</option>
                    }
                </select>
            </div>
            
            <div class="mb-3">
                <label class="form-label">Quantity Needed</label>
                <input type="number" class="form-control" id="testQuantity" min="0.01" step="0.01" />
            </div>
            
            <button type="submit" class="btn btn-primary">Test Form Submission</button>
        </form>
        
        <div id="testResult" class="mt-3"></div>
    </div>
</div>

<div class="mt-3">
    <a asp-action="Create" class="btn btn-primary">Go to Create Product</a>
    <a asp-action="Index" class="btn btn-secondary">Back to Products List</a>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Check database connection
            fetch('/api/products')
                .then(response => {
                    if (response.ok) {
                        document.getElementById('dbStatus').className = 'alert alert-success';
                        document.getElementById('dbStatus').textContent = 'Database connection successful!';
                        return response.json();
                    } else {
                        throw new Error('Database connection failed');
                    }
                })
                .catch(error => {
                    document.getElementById('dbStatus').className = 'alert alert-danger';
                    document.getElementById('dbStatus').textContent = 'Database connection error: ' + error.message;
                });
                
            // Test form submission
            document.getElementById('testForm').addEventListener('submit', function() {
                const name = document.getElementById('testName').value;
                const time = document.getElementById('testTime').value;
                const materialId = document.getElementById('testMaterial').value;
                const quantity = document.getElementById('testQuantity').value;
                
                if (!name || !time || !materialId || !quantity) {
                    document.getElementById('testResult').className = 'alert alert-warning';
                    document.getElementById('testResult').textContent = 'Please fill in all fields';
                    return;
                }
                
                const testData = {
                    name: name,
                    productionTimePerUnit: parseInt(time),
                    materialId: parseInt(materialId),
                    quantityNeeded: parseFloat(quantity)
                };
                
                document.getElementById('testResult').className = 'alert alert-info';
                document.getElementById('testResult').textContent = 'Form data is valid: ' + JSON.stringify(testData);
            });
        });
    </script>
}
